@charset "UTF-8";
/* FORM PARTS */

// Prefixes and objects:
// .input
// .label
// .select
// .form-group
// .textarea
// .switch
// .radio
// .check
// .option-group
// .input-group

// Adjustments:

// Padding:
@inputPadding: @defaultPadding;
@inputMargin: @defaultMargin;

// Colors and shadows:
@inputColor: @defaultInputColor;
@inputValidColor: @successColor;
@inputDangerColor: @failColor;
@inputHintColor: @hintColor;
@inputRequiredColor: @mainColor;

@inputShadow: @defaultShadow;
@inputShadowHover: @defaultShadowHover;
@inputShadowColor: @defaultShadowColor;

@inputBorderRadius: @defaultBorderRadius;
@inputBorderWidth: @defaultBorderWidth;
@inputBorderColor: darken(@defaultInputColor, 10%);


& when (@form=true) {
  /* Input */

  .input {
    .basicInput;
    background-color: @inputColor;
    color: contrast(@inputColor, #222222, #f4f4f4);
    white-space: nowrap;
    text-overflow: ellipsis;
    min-width: 0;
    flex: 1;
    max-width: 100%;
    transition: all .3s ease;
    background-position: 150% center;
    background-size: 15px;
    background-repeat: no-repeat;
    margin: 0;
    padding: 0.35em 0.6em;
    height: 39px;

    .form-group--validation &,
    .input-group--validation &,
    &--validation {
      .input-group.is-invalid &,
      &.is-invalid,
      &[aria-invalid="true"],
      &:invalid:not(:placeholder-shown) {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }

      .input-group.is-recommended &,
      &.is-recommended {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }

      .input-group.is-valid &,
      &.is-valid,
      &[aria-invalid="false"],
      &:valid:not(:placeholder-shown):not([type="password"]) {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }
    }

    &.is-readonly,
    &:read-only,
    &[aria-readonly="true"] {
      .inputValidation(@inputColor, darken(@inputColor, 50%), @cursor:auto);
      .boxShadow(0);
      border: 1px solid #e6e6e6;
      background-color: #fff;
    }

    &.is-disabled,
    &:disabled,
    &[aria-disabled="true"] {
      .inputValidation(@inputColor, darken(@inputColor, 15%), @backgroundImage:true, @cursor:not-allowed);
      .not-allowedBg(@color:darken(@inputColor,15%));
      .boxShadow(0);
      border-style: dashed;
    }

    &--contrast {
      background-color: darken(@inputColor, 5%);
      border: @defaultBorderWidth solid darken(@inputColor, 15%);
      color: contrast(darken(@inputColor, 5%), #000000, #ffffff);
    }

    &--small {
      font-size: .8em;
      font-weight: @fontWeightNormal;
    }

    &--large {
      font-size: 1.25em;
    }
  }

  // placeholder text color
  .input::placeholder, .textarea::placeholder {
    color: lighten(contrast(@inputColor, #222222, #f4f4f4), 50%);
    opacity: 1;
  }
  .input::-webkit-input-placeholder, .textarea::-webkit-input-placeholder {
    color: lighten(contrast(@inputColor, #222222, #f4f4f4), 50%);
    opacity: 1;
  }
  .input:-moz-placeholder, .textarea:-moz-placeholder {
    color: lighten(contrast(@inputColor, #222222, #f4f4f4), 50%);
    opacity: 1;
  }
  .input::-moz-placeholder, .textarea::-moz-placeholder {
    color: lighten(contrast(@inputColor, #222222, #f4f4f4), 50%);
    opacity: 1;
  }
  .input:-ms-input-placeholder, .textarea:-ms-input-placeholder {
    color: lighten(contrast(@inputColor, #222222, #f4f4f4), 50%);
    opacity: 1;
  }

  /* Label */
  .label {
    .basicInput(@borderColor:darken(@defaultInputColor,12%));
    align-self: flex-start;
    white-space: pre-wrap;
    background-color: darken(@inputColor, 2%);
    color: contrast(darken(@inputColor, 2%), #000000, #ffffff);
    min-width: 250px;
    max-width: 250px;
    min-height: 39px;
    margin: 0 -1px 0 0;
    padding: 0.4em 0.6em;

    .input-group.is-required &,
    &.is-required {
      border-left: @defaultBorderWidth+1px solid @inputRequiredColor;
      color: @inputRequiredColor;
      font-weight: @fontWeightBold;
    }

    .input-group.is-required &:after,
    &.is-required:after {
      content: '\00a0*';
    }

    .form-group--validation &,
    .input-group--validation &,
    &--validation {
      .input-group.is-invalid &,
      &.is-invalid {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }

      .input-group.is-recommended &,
      &.is-recommended {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }

      .input-group.is-valid &,
      &.is-valid {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }
    }

    &.is-disabled,
    &:disabled {
      color: #777777;
      cursor: not-allowed;
      .boxShadow(0);
      border: @defaultBorderWidth dashed darken(@inputColor, 20%);
      background-color: darken(@inputColor, 5%);
    }

    .icon {
      margin: 0 .25em 0 -.1em;
      align-self: center;
    }

    &--small {
      font-size: .8em;
      font-weight: @fontWeightNormal;
      min-width: 90px;
    }

    &--block {
      width: 100%;
      margin: 0;
    }
  }


  /* Dropdown */
  select, .select {
    .basicInput(@borderColor:darken(@defaultInputColor,12%));
    color: contrast(@inputColor, #222222, #f4f4f4);
    max-width: 100%;
    min-width: 0;
    background-color: @inputColor;
    .arrowsUpDownBg(@color:contrast(@inputColor, #222222, #f4f4f4));
    background-size: 20px;
    background-repeat: no-repeat;
    background-position: right center;
    transition: all .3s ease;
    margin: 0;
    padding: 0.4em 0.6em;
    height: 39px;

    &:hover {
      .boxShadow(@inputShadowHover, @inputShadowColor);
    }

    &.is-disabled,
    &:disabled {
      color: #777777;
      cursor: not-allowed;
      .boxShadow(0);
      border: @defaultBorderWidth dashed darken(@inputColor, 20%);
      background-color: darken(@inputColor, 5%);
    }

    .form-group--validation &,
    .input-group--validation &,
    &--validation {
      .input-group.is-invalid &,
      &.is-invalid,
      &[aria-invalid="true"],
      &:invalid {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }

      .input-group.is-valid &,
      &.is-valid,
      &:valid {
        color: #595959;
        cursor: auto;
        box-shadow: none;
        border: 1px solid #e6e6e6;
        background-color: #fff;
      }
    }

    &--small {
      font-size: .8em;
      font-weight: @fontWeightNormal;
      background-size: 10px;
    }
  }

  /* Text area */
  .textarea {
    resize: none;
    width: 250px;
    height: 180px;
    background-color: @inputColor;
    border: 1px solid darken(@inputColor, 10%);
    color: contrast(@inputColor, #222222, #f4f4f4);
    transition: all .3s ease;
    background-position: 150% center;
    background-size: 15px;
    background-repeat: no-repeat;
    text-align: left;
    font-weight: @fontWeightLight;
    margin: 0;
    padding: 0.4em 0.6em;

    &--block {
      width: 100%;
      margin: 0;
    }
  }

  /* Switch */
  // A simple, yet elegant, boolean switch.
  .switch {
    .basicInput(@borderColor:darken(@defaultInputColor,12%));
    background-color: darken(@inputColor, 2%);
    color: contrast(darken(@inputColor, 2%), #000000, #ffffff);
    margin: 0;
    padding: 5px 11.25px 6px 11.25px;
    height: 39px;

    &-input {
      display: none;

      &:checked + .switch-label {
        background: lighten(@inputValidColor, 20%);
      }

      &:checked + .switch-label:after {
        left: 50%;
      }
    }

    &-label {
      background: darken(@inputColor, 10%);
      .border-radius(@defaultBorderRadius);
      padding: 2px;
      transition: all .4s ease;
      outline: 0;
      display: block;
      width: 3em;
      height: 1.5em;
      position: relative;
      cursor: pointer;
      user-select: none;

      &:after {
        left: 0;
        position: relative;
        display: block;
        content: "";
        width: 50%;
        height: 100%;
        background: #fff;
        transition: all .2s ease;
        .boxShadow(@inputShadow, @inputShadowColor);
      }
    }
  }

  .tickbox() {
    .basicInput(@padding: 0;);
    background-color: darken(@inputColor, 2%);
    border: 1px solid darken(@inputColor, 12%);
    color: contrast(darken(@inputColor, 2%), #000000, #ffffff);
    margin: 0;


    &-input {
      opacity: 0;
      position: absolute;
    }
    &-label {
      position: relative;
      display: flex;
      align-items: center;
      outline: 0;
      cursor: pointer;
      flex-basis: 100%;

      &:before {
        content: '';
        background: #fff;
        border: 2px solid darken(@inputColor, 10%);;
        display: inline-block;
        vertical-align: middle;
        width: 1em;
        height: 1em;
        margin-top: -2px;
        text-align: center;
        transition: all .4s ease;
        box-shadow: inset 0 0 0 2px #fff;
      }

      &:not(:empty) {
        padding: @inputPadding @inputPadding*3.75;

        &:before {
          margin-right: 10px;
        }

        &:hover {
          background-color: @inputColor;
        }
      }
    }
    &-input:checked + &-label:before {
      background: lighten(@inputValidColor, 20%);
      border: 2px solid lighten(@inputValidColor, 10%);
    }
  }

  /* Radio button */
  .radio {
    .tickbox();

    &-label {
      &:before {
        border-radius: 50%;
      }
    }
  }

  /* Checkbox */
  .check {
    .tickbox();
  }

  /* Option group */
  // Group radio buttons or checkboxes together for multi-selection lists.
  .option-group {
    display: flex;
    flex-direction: column;
    margin: 0 !important;

    & .radio,
    & .check {
      width: 100%;
      margin: 0;
      position: relative;
      border-width: 0 @defaultBorderWidth;
      font-weight: @fontWeightLight;
      font-size: 1em;

      &:nth-of-type(even) {
        background-color: darken(@inputColor, 5%);
      }

      &:first-child {
        border-width: @defaultBorderWidth;
        border-bottom-width: 0;
      }

      &:last-child {
        border-width: @defaultBorderWidth;
        border-top-width: 0;
      }

      .mq-min(@breakSmall, { width: auto; });

      & .radio-label,
      & .check-label {
        padding: @inputPadding*3 @inputPadding*4;
      }
    }

    &--selection-list {
      max-height: 150px;
      overflow-y: auto;
      overflow-x: hidden;

      .radio,
      .check {
        flex: 1 0 auto;
      }

      .radio-label,
      .check-label {
        white-space: nowrap;
        padding-right: 30px;
      }

      .radio:not(:last-child) .radio-label,
      .check:not(:last-child) .check-label {
        border-bottom: @defaultBorderWidth solid darken(@inputColor, 20%);
      }

      .radio-label:before,
      .check-label:before {
        content: none;
      }

      .radio-input:checked + .radio-label,
      .check-input:checked + .check-label {
        background: lighten(@inputValidColor, 20%);
        border-bottom: @defaultBorderWidth solid lighten(@inputValidColor, 10%);
        color: #fff;

        &:hover {
          background-color: lighten(@inputValidColor, 10%);;
        }
      }
    }
  }


  .input,
  .label + .input--block,
  .label + .textarea--block,
  .select,
  .switch,
  .radio {
    .mq-max(@breakSmall, { width: 100%; margin: 0; margin-bottom: 5px; });
  }

  /* Input group */
  // Group buttons, labels and inputs together.
  .input-group {
    display: flex;
    align-items: center;

    & .select,
    & .input,
    & .btn,
    & .switch,
    & .textarea,
    & > .radio,
    & > .check,
    & .option-group {
      .zIndex('content', 0);
      position: relative;
      // Bring any element into forefront for proper borders given negative margin below
      &:hover,
      &:active,
      &.is-selected {
        .zIndex('content', 2);
      }

      &:focus {
        .zIndex('content', 3);
      }

      &.is-disabled,
      &.is-disabled:hover {
        .zIndex('content', 0) !important; // stay down!
      }
    }

    .mq-max(@breakSmall, {
      &:not(.input-group--bar) {
      .input-group--block();
      }
    });
    .mq-min(@breakSmall, {
      &:not(.input-group--block) {
        .input-group--bar();
      };
    });
  }

  .input-group--block {
    .input-group--block();
  }

  .input-group--bar {
    .input-group--bar();
  }

  /* Form group */
  // Use formGroups to separate different inputs or input-groups.
  .form-group {
    margin-bottom: @bottomSpace;

    &--half {
      .mq-min(@breakMedium, {
        column-count: 2;
        break-inside: avoid;
        column-fill: balance;
        & * {
          break-inside: avoid;
        }
      });
    }
  }
}

.input-group--block() {
  flex-direction: column;
  &:not(:last-child) {
    margin-bottom: @bottomSpace;
  }
  & .select,
  & .input,
  & .btn,
  & .switch,
  & .textarea,
  & > .radio,
  & > .check,
  & .option-group {
    width: 100%;
    margin: 0;
    margin-top: -1px;
    .boxShadow(0);
  }
  & .label {
    border-width: 0 @defaultBorderWidth;
    width: 100%;
    margin: 0;

    &:first-child {
      border-width: @defaultBorderWidth;
      border-bottom-width: 0;
    }

    &:last-child {
      border-width: @defaultBorderWidth;
      border-top-width: 0;
    }
  }
  & > *:not(:last-child) {
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
  & > *:not(:first-child) {
    border-top-right-radius: 0;
    border-top-left-radius: 0;
  }
}

.input-group--bar() {
  flex-flow: row;
  & .label {
    border-width: @defaultBorderWidth;

    &:first-child {
      border-right-width: 0;
    }

    &:last-child {
      border-left-width: 0;
    }
  }
  & .label,
  & .select,
  & .input,
  & .btn,
  & .switch,
  & .textarea,
  & > .radio,
  & > .check,
  & .option-group {
    width: auto;
    max-width: 30vw;
    margin-left: -1px;
    margin-top: @inputMargin;
    margin-bottom: @inputMargin;
    .boxShadow(@inputShadow, @inputShadowColor);
  }
  & > *:not(:last-child) {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  & > *:not(:first-child) {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}

input[type="color"] {
	-webkit-appearance: none;
	border: none;
	width: 2.3em;
	height: 2.3em;
    padding: 0;

    &::-webkit-color-swatch-wrapper {
	  padding: 0;
    }

    &::-webkit-color-swatch {
	  border: none;
    }
}

